<?php

require_once '../src/Database.php';

/*
	Parse the form generated by /create.php.

	Create a database entry for a job to be run.

	Check for duplicates in the database table.

	Ensure the input data is valid for our database table.

	If any input is suspicious raise a 500 Internal Server Error.

	Javascript client-side validation *should* also exist.
*/


function valid_domain($domain)
{
	if (preg_match('/^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$/', $domain)) {
		return true;
	}
	return false;
}

function valid_agent($agent)
{
	if (preg_match('/^[A-Za-z0-9\._\/]+$/', $agent)) {
		return true;
	}

	return false;
}

function valid_time($time)
{
	if (preg_match('/^\d{2}:\d{2}$/', $time)) {
		return true;
	}

	return false;
}

function main()
{
	$allowed = [ 'domain', 'agent', 'time', 'frequency'];
	$frequency_allowed = [ 'daily', 'weekly' ];
	$weekdays = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday' ];

	foreach ($allowed as $param) {
		if (!isset($_POST[$param]) || empty($_POST[$param])) {
			http_response_code(500);
			return;
		}

		if (!in_array($param, $allowed)) {
			http_response_code(500);
			return;
		}
	}

	$domain    = $_POST['domain'];
	$agent     = $_POST['agent'];
	$time      = $_POST['time'];
	$frequency = $_POST['frequency'];

	if (!in_array($frequency, $frequency_allowed)) {
		http_response_code(500);
		return;
	}

	if ((!valid_time($time)) || (!valid_agent($agent)) || (!valid_domain($domain))) {
		http_response_code(500);
		return;
	}

	if ($frequency === "weekly") {
		if (!isset($_POST['weekly']) || empty($_POST['weekly'])) {
			http_response_code(500);
			return;
		} else {
			if (!in_array($_POST['weekly'], $weekdays)) {
				http_response_code(500);
				return;
			}
			$weekday = $_POST['weekly'];
			print "$weekday\n";
		}
	}

	try {
		$db = new DB();
	} catch (Exception $e) {

	}
}

main();

?>
